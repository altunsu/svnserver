---
- name: SVN_DEPLOY
  hosts: svn_server
  become: true
  
  tasks:

##### UPDATE SERVER
- name: Upgrade all yum packages ansible.
  yum:
    name: "*"
    state: latest

##### CREATE DIRECTORY
  - file:
     path: /fbin/
     state: directory
     owner: root
     group: root
     mode: 0775

##### UPLOAD FILE TEST FILE
  - copy:
     src: /your-local-path/svnserver/helloworld.war
     dest: /fbin/helloworld.war
     owner: root
     group: root
     mode: 0755
     backup: no

##### UPLOAD DOCKER FILE
  - copy:
     src: /your-local-path/svnserver/Dockerfile
     dest: /fbin/Dockerfile
     owner: root
     group: root
     mode: 0755
     backup: no

##### UPLOAD NGINX FOLDER
  - copy:
     src: /your-local-path/svnserver/etc/
     dest: /fbin/etc/
     owner: root
     group: root
     mode: 0755
     backup: no

##### UPLOAD ENTRPOINT FILE 
  - copy:
     src: /your-local-path/svnserver/entrypoint.sh
     dest: /fbin/
     owner: root
     group: root
     mode: 0755
     backup: no

##### MANUPLATE FIREWALL & SELINUX
  - firewalld:
     service: https
     permanent: true
     state: enabled

 - firewalld:
     port: 8080/tcp
     permanent: true
     state: disabled
 
  - selinux: 
     state: disabled

##### LET'S SEE IF INSTANCE STILL RESPONDING AFTER REBOOT

  - name: Reboots machine to new kernel (async)
    shell: /bin/sleep 5 && /sbin/shutdown -r now "Reboot triggered by Ansible"
    async: 1
    poll:  0
    ignore_errors: true
 
  - name: Wait 300 seconds for port 22 to become open and contain "OpenSSH"
    wait_for:
     port: 22
     host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
     search_regex: OpenSSH
     delay: 10
    vars:
     ansible_connection: local

##### GOOD WE CAN INSTALL DOCKER CE
  - name: Docker installation begins
    shell: curl -fsSL https://get.docker.com/ | sh

##### LET'S RUN DOCKER
  - name: Start Docker
    systemd: state=started name=docker
    
##### LET'S CHECK IF DOCKER WORKING
  - name: Makesure if docker running
    systemd:
      name: docker
      enabled: yes
      masked: no

##### CREATE DOCKER IMAGE
  - name: Docker creating image
    shell: docker build -t svnserver .
    args:
      chdir: /fbin/

##### RUN INSTANCE
  - name: Docker running image
    shell: nohup docker run -i --rm -p 8080:8080 -p 443:443 -p 80:80 --name helloworld svnserver 2>&1  </dev/null &

##### TEST IF INSTANCE IS RESPONDING
  - name: Check if port 80 is listening
    wait_for:
      port: 80
      delay: 5
      timeout: 10
      msg: "Timeout waiting for 80 to respond"
    register: port_check
    ignore_errors: yes

  - name: Check if port 443 is listening
    wait_for:
      port: 443
      delay: 5
      timeout: 10
      msg: "Timeout waiting for 443 to respond"
    register: port_check
    ignore_errors: yes
    
  - name: Check if port 8080 is listening
    wait_for:
      port: 8080
      delay: 5
      timeout: 20
      msg: "Timeout waiting for 8080 to respond it's might take time because of Java"
    register: port_check
    ignore_errors: yes
    
  #### You should be able to browse http, https and 8080 port now.
